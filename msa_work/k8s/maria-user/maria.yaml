#apiVersion: v1
#kind: Namespace
#metadata:
#  name: maria-name
#

---
apiVersion: apps/v1
kind: Deployment # pod 여러개 만들겠다는 명령어
metadata:
  name: mariadb-user-deployment
#  namespace: maria-name
spec: # 어떻게 만들지 대한 내용
  replicas: 1 # 생성할 파드 갯수
  selector:
    matchLabels:
      app: mariadb-user #쿠버네티스 내의 변수명
  template: # blueprint for pods
    metadata:
      labels:
        app: mariadb-user # 서비스에서 찾는 변수명
    spec: # pod 한개에 대한 내용
      containers:
        - name: mariadb-user
          image: mariadb #dockerhub 에 있는 image
          ports:
            - containerPort: 3306 #default one
          env: #환경설정
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-secret
                  key: password
          volumeMounts:
            - name: mariadb-initdb-config-user
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mariadb-initdb-config-user
          configMap:
            name: mariadb-initdb-config-user
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb-user
#  namespace: maria-name
spec:
#  type: LoadBalancer
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 30306
  selector:
    app: mariadb-user

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-initdb-config-user
#  namespace: maria-name
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS msa CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
    use msa;
    drop table if exists users;
    create table users
    (
        id       bigint       not null auto_increment,
        email    varchar(50)  not null,
        name     varchar(50)  not null,
        password varchar(100) not null,
        thumb    varchar(255),
        user_id  varchar(255) not null,
        primary key (id)
    ) engine=InnoDB;
    alter table if exists users add constraint user_email_unique unique (email);
    alter table if exists users add constraint user_userid_unique unique (user_id);